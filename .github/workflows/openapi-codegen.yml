name: Codegen from OpenAPI

on:
  workflow_dispatch: {}
  repository_dispatch:
    types: [codegen]
  push:
    branches: [main]

jobs:
  codegen:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch app installation token
        uses: tibdex/github-app-token@v2.1.0
        id: gh-api-token
        with:
          app_id: ${{ secrets.EIN_CODEGEN_APP_ID }}
          private_key: ${{ secrets.EIN_CODEGEN_APP_PRIVATE_KEY }}

      - name: Checkout codegen repo
        uses: actions/checkout@v4
        with:
          repository: felleslosninger/ein-api-codegen
          token: ${{ steps.gh-api-token.outputs.token }}
          path: "ein-api-codegen"

      - name: Checkout OpenAPI repo
        uses: actions/checkout@v4
        with:
          repository: felleslosninger/ein-openapi
          token: ${{ steps.gh-api-token.outputs.token }}
          path: "ein-openapi"

      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          path: target

      - name: Install Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "adopt"

      - name: Install bun
        uses: oven-sh/setup-bun@v2

      - name: Remove old codegen files (with // codegen in first line)
        run: |
          cd target
          find . -type f -exec sh -c 'head -n 1 "$0" | grep -q "// Auto-generated from our OpenAPI spec"' {} \; -print | xargs -r rm

      - name: Generate new files
        run: |
          cd ein-api-codegen
          bun install
          bun run generate:java-server
          cp -r out/java-server/* ../target/

      - name: Run spotless
        run: |
          cd target
          mvn spotless:apply

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          path: "target"
          title: "EIN-Codegen"
          body: "Automated changes by API codegen."
          commit-message: "API codegen"
          branch: "codegen"
          token: ${{ steps.gh-api-token.outputs.token }}
