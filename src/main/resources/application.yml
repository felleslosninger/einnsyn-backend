logging:
  level:
    no.einnsyn: ${LOG_LEVEL:INFO}
    #org.springframework.web:
    #hibernate: DEBUG
    #hibernate.SQL: DEBUG
    #hibernate.orm.jdbc.bind: TRACE
    #springframework: TRACE
    #elasticsearch: DEBUG

server:
  error:
    whitelabel:
      enabled: false
  tomcat:
    relaxed-query-chars: "[,]"
  compression:
    enabled: true
    mime-types: application/json, application/xml, text/html, text/xml, text/plain, application/javascript, text/css
    min-response-size: 1024
  shutdown: graceful

application:
  innsynskravRetryInterval: 3600000
  userSecretExpirationTime: ${USER_SECRET_EXPIRY:86400} # 24 hours
  baseUrl: ${BASE_URL:http://localhost:8080}
  elasticsearch:
    index: ${ELASTICSEARCH_ACTIVE_INDEX:test}
    uri: ${ELASTICSEARCH_URIS:http://localhost:9200}
    concurrency: ${ELASTICSEARCH_CONCURRENCY:5}
    reindexer:
      getBatchSize: ${ELASTICSEARCH_REINDEXER_GET_BATCH_SIZE:1000}
      indexBatchSize: ${ELASTICSEARCH_REINDEXER_INDEX_BATCH_SIZE:1000}
      cron:
        updateOutdated: ${ELASTICSEARCH_REINDEXER_CRON_UPDATE:0 0 * * * *} # Every hour
        removeStale: ${ELASTICSEARCH_REINDEXER_CRON_REMOVE:0 0 0 * * 6} # Every Saturday at midnight
  integrasjonspunkt:
    moveUrl: ${MOVE_URL:http://integrasjonspunkt:9093}
    orgnummer: ${IP_ORGNUMMER:000000000}
    expectedResponseTimeoutDays: ${EXPECTED_RESPONSE_TIMEOUT_DAYS:30}
  email:
    from: ${EMAIL_FROM:eInnsyn.no <test@example.com>}
    from_host: ${EMAIL_FROM_HOST:example.com}
  innsynskrav:
    debugRecipient: ${INNSYNSKRAV_DEBUG_RECIPIENT:}
  jwt:
    encryption-secret: ${JWT_SECRET:64b48c1a211bbe38b61fa1556f4afe1d86bf86b89d8365a11aab535d250bdadb}
    accessTokenExpiration: ${JWT_EXPIRATION:3600} # 1 hour
    refreshTokenExpiration: ${JWT_EXPIRATION:2419200} # 28 days
  apikey:
    root-key: ${ROOT_API_KEY:secret_changeme}

spring:
  application:
    name: einnsyn-backend
    environment: local
  config:
    import: optional:file:.env[.properties]
  main:
    allow-bean-definition-overriding: true
  mail:
    host: ${EMAIL_SMTP:localhost}
    port: ${EMAIL_PORT:587}
    username: ${EMAIL_USER:apikey}
    password: ${EMAIL_PASS:apisecret}
    properties:
      mail:
        smtp:
          auth: ${EMAIL_SMTP_AUTH:true}
          protocol: ${EMAIL_SMTP_PROTOCOL:smtps}
  jpa:
    open-in-view: true
    properties:
      hibernate:
        ddl-auto: validate
        session:
          events:
            log: LOG_QUERIES_SLOWER_THAN_MS=1000
        jdbc:
          fetch_size: 100
          batch_size: 100
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost/arkiv}
    username: ${SPRING_DATASOURCE_USERNAME:einnsyn}
    password: ${SPRING_DATASOURCE_PASSWORD:admin}
  mvc:
    log-resolved-exception: false
    pathmatch:
      matching-strategy: ANT_PATH_MATCHER
    converters:
      preferred-json-mapper: gson
  flyway:
    enabled: true
    locations: classpath:db/migration
    placeholders:
      apikey-root-key: ${application.apikey.root-key}
    placeholder-replacement: true
    out-of-order: true
  # security:
  #   oauth2:
  #     client:
  #       registration:
  #         ansattporten:
  #           provider: ansattporten
  #           client-id: my-client-id
  #           client-secret: my-client-secret
  #           authorization-grant-type: authorization_code
  #           scope: openid,profile
  #       provider:
  #         ansattporten:
  #           issuer-uri: "https://ansattporten.no/.well-known/openid-configuration"
  threads:
    virtual.enabled: true

management:
  server:
    port: 8090
  endpoint:
    health:
      enabled: true
      show-details: always
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      base-path: /
      exposure:
        include: "*"
  prometheus:
    metrics:
      export:
        enabled: true

---
spring:
  config:
    activate:
      on-profile: test
  jpa:
    properties:
      hibernate:
        cache:
          use_second_level_cache: false
          use_query_cache: false
  datasource:
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver
    url: jdbc:tc:postgresql:16.3:///arkiv
application:
  shedlock:
    disable: true
---
spring:
  config:
    activate:
      on-profile: container
logging:
  config: classpath:logback-container.xml
